{
    "LigandMPNN": {
        "name": "LigandMPNN",
        "description": "Run LigandMPNN on a PDB file.",
        "container": "LigandMPNN",
        "command": "python3 LigandMPNN/run.py --pdb_path_multi {pdb_input_json} --out_folder {output_dir} --batch_size {num_designs} {extra_args}",
        "requirements": "None"
    },
    "FastRelax": {
        "name": "FastRelax",
        "description": "Run FastRelax on a PDB file.",
        "container": "Rosetta",
        "command": "relax -in:file:s {pdb_string} -out:path:pdb {output_dir} -out:path:score {output_dir} {extra_args}",
        "requirements": "None"
    },
    "RFDiffusionAA": {
        "name": "RFDiffusionAA",
        "description": "Run RFDiffusionAA on a PDB file.",
        "container": "RFDiffusionAA",
        "command": "python -u rf_diffusion_all_atom/run_inference.py inference.input_pdb={input_structure} inference.num_designs={num_designs} contigmap.contigs={contig_map} contigmap.length={total_length} inference.ligand={ligand} inference.output_prefix={output_prefix} inference.cautious={cautious} inference.deterministic={deterministic} inference.design_startnum={design_startnum} diffuser.T={diffuser_steps} {extra_args}",
        "requirements": "None"
    },
    "Chai-1": {
        "name": "Chai-1",
        "description": "Run Chai-1 structure prediction on a FASTA file and SMILES.",
        "container": "Chai-1",
        "command": "python $RIBBON_TASKS_MODULE_DIR/task_scripts/chai-1/predict_structure.py {fasta_file} \" {smiles_string} \" {output_dir} --num_ligands {num_ligands} {extra_args}",
        "requirements": "None",
        "environment_variables": {
            "TRANSFORMERS_OFFLINE": "1"
        }
    },
    "RaptorXSingle": {
        "name": "RaptorXSingle",
        "description": "Run RaptorXSingle on a FASTA file.",
        "container": "RaptorXSingle",
        "command": "python RaptorX-Single/pred.py {fasta_file} {param} --plm_param_dir RaptorX-Single/params/ --out_dir {output_dir} --device {device_id} {extra_args}",
        "requirements": "None"
    },
    "Calculate Distance": {
        "name": "Calculate Distance",
        "description": "Calculate the distance between two atoms in a PDB file.",
        "container": "BioPython",
        "command": "python3 $RIBBON_TASKS_MODULE_DIR/task_scripts/biopython/calculate_distance.py {pdb_file} {atom1} {atom2} --output_file {output_file}",
        "requirements": "None"
    },
    "Calculate Pairwise Distance": {
        "name": "Calculate Pairwise",
        "description": "Calculate the distance between two atoms in a PDB file.",
        "container": "BioPython",
        "command": "python3 $RIBBON_TASKS_MODULE_DIR/task_scripts/biopython/calculate_pairwise_distances.py {pdb_file} --groupA {atom_group_A} --groupB {atom_group_B} {output_file}",
        "requirements": "None"
    },
    "Calculate SASA": {
        "name": "Calculate SASA",
        "description": "Calculate the solvent accessible surface area of an object in a PDB file.",
        "container": "BioPython",
        "command": "python3 $RIBBON_TASKS_MODULE_DIR/task_scripts/biopython/calculate_SASA.py {pdb_file} --output_file {output_file} {extra_args}",
        "requirements": "None"
    },
    "Calculate Plane Angle": {
        "name": "Calculate Plane Angle",
        "description": "Calculate the angle between two planes in a PDB file.",
        "container": "BioPython",
        "command": "python3 $RIBBON_TASKS_MODULE_DIR/task_scripts/biopython/calculate_plane_angle.py {pdb_file} {atom_1} {atom_2} {atom_3} {atom_4} {atom_5} {atom_6} --output_file {output_file}",
        "requirements": "None"
    },
    "Add Hydrogens": {
        "name": "Add Hydrogens",
        "description": "Add hydrogens to a PDB file using PyMol.",
        "container": "PyMol",
        "command": "python3 $RIBBON_TASKS_MODULE_DIR/task_scripts/pymol/add_h.py {input_file} --save {output_file} --sel \"{selection}\"",
        "requirements": "None"
    },
    "EasyMD": {
        "name": "EasyMD",
        "description": "Prepare and run an MD simulation with EasyMD",
        "container": "EasyMD",
        "command": "easymd run {input_file} --output {output_prefix} --duration {duration} --relax-duration {relax_duration} --output-frequency {output_frequency} {ligand_files} {forcefield_files} --water-model {water_model} --ph {pH} {hydrogen_variants} --ionic-strength {ionic_strength} --box-padding {box_padding} {custom_bonds} {custom_angles} {custom_torsions} {minimize_only} {extra_args}", 
        "requirements": "None"
    }
}